<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>生命在于折腾</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://renjiabao.cn/"/>
  <updated>2016-09-06T10:34:33.851Z</updated>
  <id>http://renjiabao.cn/</id>
  
  <author>
    <name>wolego</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java语言实现的各种排序</title>
    <link href="http://renjiabao.cn/2014/10/09/java_sort/"/>
    <id>http://renjiabao.cn/2014/10/09/java_sort/</id>
    <published>2014-10-08T16:00:00.000Z</published>
    <updated>2016-09-06T10:34:33.851Z</updated>
    
    <content type="html"><![CDATA[<p> 用Java语言实现的各种排序，包括插入排序、冒泡排序、选择排序、Shell排序、快速排序、归并排序、堆排序、SortUtil等。</p>
<h4 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h4><figure class="highlight plain"><figcaption><span>org.rut.util.algorithm.support;</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line">public class InsertSort implements SortUtil.Sort&#123;</div><div class="line"></div><div class="line">    /* (non-Javadoc)</div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        int temp;</div><div class="line">        for(int i=1;i&lt;data.length;i++)&#123;</div><div class="line">            for(int j=i;(j&gt;0)&amp;&amp;(data[j]&lt;data[j-1]);j--)&#123;</div><div class="line">                SortUtil.swap(data,j,j-1);</div><div class="line">            &#125;</div><div class="line">        &#125;        </div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="冒泡排序…"><a href="#冒泡排序…" class="headerlink" title="冒泡排序…"></a>冒泡排序…</h4><a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class BubbleSort implements SortUtil.Sort&#123;</div><div class="line"></div><div class="line">    /* (non-Javadoc)</div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        int temp;</div><div class="line">        for(int i=0;i&lt;data.length;i++)&#123;</div><div class="line">            for(int j=data.length-1;j&gt;i;j--)&#123;</div><div class="line">                if(data[j]&lt;data[j-1])&#123;</div><div class="line">                    SortUtil.swap(data,j,j-1);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class SelectionSort implements SortUtil.Sort &#123;</div><div class="line"></div><div class="line">    /*</div><div class="line">     * (non-Javadoc)</div><div class="line">     * </div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        int temp;</div><div class="line">        for (int i = 0; i &lt; data.length; i++) &#123;</div><div class="line">            int lowIndex = i;</div><div class="line">            for (int j = data.length - 1; j &gt; i; j--) &#123;</div><div class="line">                if (data[j] &lt; data[lowIndex]) &#123;</div><div class="line">                    lowIndex = j;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            SortUtil.swap(data,i,lowIndex);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Shell排序"><a href="#Shell排序" class="headerlink" title="Shell排序"></a>Shell排序</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class ShellSort implements SortUtil.Sort&#123;</div><div class="line"></div><div class="line">    /* (non-Javadoc)</div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        for(int i=data.length/2;i&gt;2;i/=2)&#123;</div><div class="line">            for(int j=0;j&lt;i;j++)&#123;</div><div class="line">                insertSort(data,j,i);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        insertSort(data,0,1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * @param data</div><div class="line">     * @param j</div><div class="line">     * @param i</div><div class="line">     */</div><div class="line">    private void insertSort(int[] data, int start, int inc) &#123;</div><div class="line">        int temp;</div><div class="line">        for(int i=start+inc;i&lt;data.length;i+=inc)&#123;</div><div class="line">            for(int j=i;(j&gt;=inc)&amp;&amp;(data[j]&lt;data[j-inc]);j-=inc)&#123;</div><div class="line">                SortUtil.swap(data,j,j-inc);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class QuickSort implements SortUtil.Sort&#123;</div><div class="line"></div><div class="line">    /* (non-Javadoc)</div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        quickSort(data,0,data.length-1);        </div><div class="line">    &#125;</div><div class="line">    private void quickSort(int[] data,int i,int j)&#123;</div><div class="line">        int pivotIndex=(i+j)/2;</div><div class="line">        //swap</div><div class="line">        SortUtil.swap(data,pivotIndex,j);</div><div class="line">         </div><div class="line">        int k=partition(data,i-1,j,data[j]);</div><div class="line">        SortUtil.swap(data,k,j);</div><div class="line">        if((k-i)&gt;1) quickSort(data,i,k-1);</div><div class="line">        if((j-k)&gt;1) quickSort(data,k+1,j);</div><div class="line">         </div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     * @param data</div><div class="line">     * @param i</div><div class="line">     * @param j</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    private int partition(int[] data, int l, int r,int pivot) &#123;</div><div class="line">        do&#123;</div><div class="line">           while(data[++l]&lt;pivot);</div><div class="line">           while((r!=0)&amp;&amp;data[--r]&gt;pivot);</div><div class="line">           SortUtil.swap(data,l,r);</div><div class="line">        &#125;</div><div class="line">        while(l&lt;r);</div><div class="line">        SortUtil.swap(data,l,r);        </div><div class="line">        return l;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="改进后的快速排序"><a href="#改进后的快速排序" class="headerlink" title="改进后的快速排序"></a>改进后的快速排序</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class ImprovedQuickSort implements SortUtil.Sort &#123;</div><div class="line"></div><div class="line">    private static int MAX_STACK_SIZE=4096;</div><div class="line">    private static int THRESHOLD=10;</div><div class="line">    /* (non-Javadoc)</div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        int[] stack=new int[MAX_STACK_SIZE];</div><div class="line">         </div><div class="line">        int top=-1;</div><div class="line">        int pivot;</div><div class="line">        int pivotIndex,l,r;</div><div class="line">        </div><div class="line">        stack[++top]=0;</div><div class="line">        stack[++top]=data.length-1;</div><div class="line">        </div><div class="line">        while(top&gt;0)&#123;</div><div class="line">            int j=stack[top--];</div><div class="line">            int i=stack[top--];</div><div class="line">            </div><div class="line">            pivotIndex=(i+j)/2;</div><div class="line">            pivot=data[pivotIndex];</div><div class="line">            </div><div class="line">            SortUtil.swap(data,pivotIndex,j);</div><div class="line">            </div><div class="line">            //partition</div><div class="line">            l=i-1;</div><div class="line">            r=j;</div><div class="line">            do&#123;</div><div class="line">                while(data[++l]&lt;pivot);</div><div class="line">                while((r!=0)&amp;&amp;(data[--r]&gt;pivot));</div><div class="line">                SortUtil.swap(data,l,r);</div><div class="line">            &#125;</div><div class="line">            while(l&lt;r);</div><div class="line">            SortUtil.swap(data,l,r);</div><div class="line">            SortUtil.swap(data,l,j);</div><div class="line">            </div><div class="line">            if((l-i)&gt;THRESHOLD)&#123;</div><div class="line">                stack[++top]=i;</div><div class="line">                stack[++top]=l-1;</div><div class="line">            &#125;</div><div class="line">            if((j-l)&gt;THRESHOLD)&#123;</div><div class="line">                stack[++top]=l+1;</div><div class="line">                stack[++top]=j;</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">        &#125;</div><div class="line">        //new InsertSort().sort(data);</div><div class="line">        insertSort(data);</div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     * @param data</div><div class="line">     */</div><div class="line">    private void insertSort(int[] data) &#123;</div><div class="line">        int temp;</div><div class="line">        for(int i=1;i&lt;data.length;i++)&#123;</div><div class="line">            for(int j=i;(j&gt;0)&amp;&amp;(data[j]&lt;data[j-1]);j--)&#123;</div><div class="line">                SortUtil.swap(data,j,j-1);</div><div class="line">            &#125;</div><div class="line">        &#125;       </div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class MergeSort implements SortUtil.Sort&#123;</div><div class="line"></div><div class="line">    /* (non-Javadoc)</div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        int[] temp=new int[data.length];</div><div class="line">        mergeSort(data,temp,0,data.length-1);</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    private void mergeSort(int[] data,int[] temp,int l,int r)&#123;</div><div class="line">        int mid=(l+r)/2;</div><div class="line">        if(l==r) return ;</div><div class="line">        mergeSort(data,temp,l,mid);</div><div class="line">        mergeSort(data,temp,mid+1,r);</div><div class="line">        for(int i=l;i&lt;=r;i++)&#123;</div><div class="line">            temp[i]=data[i];</div><div class="line">        &#125;</div><div class="line">        int i1=l;</div><div class="line">        int i2=mid+1;</div><div class="line">        for(int cur=l;cur&lt;=r;cur++)&#123;</div><div class="line">            if(i1==mid+1)</div><div class="line">                data[cur]=temp[i2++];</div><div class="line">            else if(i2&gt;r)</div><div class="line">                data[cur]=temp[i1++];</div><div class="line">            else if(temp[i1]&lt;temp[i2])</div><div class="line">                data[cur]=temp[i1++];</div><div class="line">            else</div><div class="line">                data[cur]=temp[i2++];            </div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="改进后的归并排序"><a href="#改进后的归并排序" class="headerlink" title="改进后的归并排序"></a>改进后的归并排序</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class ImprovedMergeSort implements SortUtil.Sort &#123;</div><div class="line"></div><div class="line">    private static final int THRESHOLD = 10;</div><div class="line"></div><div class="line">    /*</div><div class="line">     * (non-Javadoc)</div><div class="line">     * </div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        int[] temp=new int[data.length];</div><div class="line">        mergeSort(data,temp,0,data.length-1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void mergeSort(int[] data, int[] temp, int l, int r) &#123;</div><div class="line">        int i, j, k;</div><div class="line">        int mid = (l + r) / 2;</div><div class="line">        if (l == r)</div><div class="line">            return;</div><div class="line">        if ((mid - l) &gt;= THRESHOLD)</div><div class="line">            mergeSort(data, temp, l, mid);</div><div class="line">        else</div><div class="line">            insertSort(data, l, mid - l + 1);</div><div class="line">        if ((r - mid) &gt; THRESHOLD)</div><div class="line">            mergeSort(data, temp, mid + 1, r);</div><div class="line">        else</div><div class="line">            insertSort(data, mid + 1, r - mid);</div><div class="line"></div><div class="line">        for (i = l; i &lt;= mid; i++) &#123;</div><div class="line">            temp[i] = data[i];</div><div class="line">        &#125;</div><div class="line">        for (j = 1; j &lt;= r - mid; j++) &#123;</div><div class="line">            temp[r - j + 1] = data[j + mid];</div><div class="line">        &#125;</div><div class="line">        int a = temp[l];</div><div class="line">        int b = temp[r];</div><div class="line">        for (i = l, j = r, k = l; k &lt;= r; k++) &#123;</div><div class="line">            if (a &lt; b) &#123;</div><div class="line">                data[k] = temp[i++];</div><div class="line">                a = temp[i];</div><div class="line">            &#125; else &#123;</div><div class="line">                data[k] = temp[j--];</div><div class="line">                b = temp[j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * @param data</div><div class="line">     * @param l</div><div class="line">     * @param i</div><div class="line">     */</div><div class="line">    private void insertSort(int[] data, int start, int len) &#123;</div><div class="line">        for(int i=start+1;i&lt;start+len;i++)&#123;</div><div class="line">            for(int j=i;(j&gt;start) &amp;&amp; data[j]&lt;data[j-1];j--)&#123;</div><div class="line">                SortUtil.swap(data,j,j-1);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class HeapSort implements SortUtil.Sort&#123;</div><div class="line"></div><div class="line">    /* (non-Javadoc)</div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        MaxHeap h=new MaxHeap();</div><div class="line">        h.init(data);</div><div class="line">        for(int i=0;i&lt;data.length;i++)</div><div class="line">            h.remove();</div><div class="line">        System.arraycopy(h.queue,1,data,0,data.length);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">     private static class MaxHeap&#123;         </div><div class="line">         </div><div class="line">        void init(int[] data)&#123;</div><div class="line">            this.queue=new int[data.length+1];</div><div class="line">            for(int i=0;i&lt;data.length;i++)&#123;</div><div class="line">                queue[++size]=data[i];</div><div class="line">                fixUp(size);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">         </div><div class="line">        private int size=0;</div><div class="line"></div><div class="line">        private int[] queue;</div><div class="line">                 </div><div class="line">        public int get() &#123;</div><div class="line">            return queue[1];</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        public void remove() &#123;</div><div class="line">            SortUtil.swap(queue,1,size--);</div><div class="line">            fixDown(1);</div><div class="line">        &#125;</div><div class="line">        //fixdown</div><div class="line">        private void fixDown(int k) &#123;</div><div class="line">            int j;</div><div class="line">            while ((j = k &lt;&lt; 1) &lt;= size) &#123;</div><div class="line">                if (j &lt; size &amp;&amp; queue[j]&lt;queue[j+1])</div><div class="line">                    j++; </div><div class="line">                if (queue[k]&gt;queue[j]) //不用交换</div><div class="line">                    break;</div><div class="line">                SortUtil.swap(queue,j,k);</div><div class="line">                k = j;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        private void fixUp(int k) &#123;</div><div class="line">            while (k &gt; 1) &#123;</div><div class="line">                int j = k &gt;&gt; 1;</div><div class="line">                if (queue[j]&gt;queue[k])</div><div class="line">                    break;</div><div class="line">                SortUtil.swap(queue,j,k);</div><div class="line">                k = j;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>SortUtil<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">package org.rut.util.algorithm;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.support.BubbleSort;</div><div class="line">import org.rut.util.algorithm.support.HeapSort;</div><div class="line">import org.rut.util.algorithm.support.ImprovedMergeSort;</div><div class="line">import org.rut.util.algorithm.support.ImprovedQuickSort;</div><div class="line">import org.rut.util.algorithm.support.InsertSort;</div><div class="line">import org.rut.util.algorithm.support.MergeSort;</div><div class="line">import org.rut.util.algorithm.support.QuickSort;</div><div class="line">import org.rut.util.algorithm.support.SelectionSort;</div><div class="line">import org.rut.util.algorithm.support.ShellSort;</div><div class="line"></div><div class="line"></div><div class="line">public class SortUtil &#123;</div><div class="line">    public final static int INSERT = 1;</div><div class="line">    public final static int BUBBLE = 2;</div><div class="line">    public final static int SELECTION = 3;</div><div class="line">    public final static int SHELL = 4;</div><div class="line">    public final static int QUICK = 5;</div><div class="line">    public final static int IMPROVED_QUICK = 6;</div><div class="line">    public final static int MERGE = 7;</div><div class="line">    public final static int IMPROVED_MERGE = 8;</div><div class="line">    public final static int HEAP = 9;</div><div class="line"></div><div class="line">    public static void sort(int[] data) &#123;</div><div class="line">        sort(data, IMPROVED_QUICK);</div><div class="line">    &#125;</div><div class="line">    private static String[] name=&#123;</div><div class="line">            &quot;insert&quot;, &quot;bubble&quot;, &quot;selection&quot;, &quot;shell&quot;, &quot;quick&quot;, &quot;improved_quick&quot;, &quot;merge&quot;, &quot;improved_merge&quot;, &quot;heap&quot;</div><div class="line">    &#125;;</div><div class="line">     </div><div class="line">    private static Sort[] impl=new Sort[]&#123;</div><div class="line">            new InsertSort(),</div><div class="line">            new BubbleSort(),</div><div class="line">            new SelectionSort(),</div><div class="line">            new ShellSort(),</div><div class="line">            new QuickSort(),</div><div class="line">            new ImprovedQuickSort(),</div><div class="line">            new MergeSort(),</div><div class="line">            new ImprovedMergeSort(),</div><div class="line">            new HeapSort()</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    public static String toString(int algorithm)&#123;</div><div class="line">        return name[algorithm-1];</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    public static void sort(int[] data, int algorithm) &#123;</div><div class="line">        impl[algorithm-1].sort(data);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static interface Sort &#123;</div><div class="line">        public void sort(int[] data);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static void swap(int[] data, int i, int j) &#123;</div><div class="line">        int temp = data[i];</div><div class="line">        data[i] = data[j];</div><div class="line">        data[j] = temp;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 用Java语言实现的各种排序，包括插入排序、冒泡排序、选择排序、Shell排序、快速排序、归并排序、堆排序、SortUtil等。&lt;/p&gt;
&lt;h4 id=&quot;插入排序&quot;&gt;&lt;a href=&quot;#插入排序&quot; class=&quot;headerlink&quot; title=&quot;插入排序&quot;&gt;&lt;/a&gt;插入排序&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;org.rut.util.algorithm.support;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import org.rut.util.algorithm.SortUtil;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class InsertSort implements SortUtil.Sort&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    /* (non-Javadoc)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public void sort(int[] data) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int temp;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        for(int i=1;i&amp;lt;data.length;i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            for(int j=i;(j&amp;gt;0)&amp;amp;&amp;amp;(data[j]&amp;lt;data[j-1]);j--)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                SortUtil.swap(data,j,j-1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;冒泡排序…&quot;&gt;&lt;a href=&quot;#冒泡排序…&quot; class=&quot;headerlink&quot; title=&quot;冒泡排序…&quot;&gt;&lt;/a&gt;冒泡排序…&lt;/h4&gt;
    
    </summary>
    
      <category term="Java" scheme="http://renjiabao.cn/categories/Java/"/>
    
    
      <category term="Java" scheme="http://renjiabao.cn/tags/Java/"/>
    
      <category term="排序" scheme="http://renjiabao.cn/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>Linux域名解析</title>
    <link href="http://renjiabao.cn/2014/10/01/linux-dns/"/>
    <id>http://renjiabao.cn/2014/10/01/linux-dns/</id>
    <published>2014-09-30T16:00:00.000Z</published>
    <updated>2016-09-06T10:31:06.464Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解析域名3个关键文件："><a href="#解析域名3个关键文件：" class="headerlink" title="解析域名3个关键文件："></a>解析域名3个关键文件：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/etc/hosts</div><div class="line">/etc/resolv.conf</div><div class="line">/etc/nsswitch.conf</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="nsswitch-conf-与系统获取解析的顺序"><a href="#nsswitch-conf-与系统获取解析的顺序" class="headerlink" title="nsswitch.conf 与系统获取解析的顺序"></a>nsswitch.conf 与系统获取解析的顺序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/home/was$ vi /etc/nsswitch.conf</div><div class="line"> #找到hosts关键字</div><div class="line"> #hosts:     db files nisplus nis dns</div><div class="line"> hosts:      files dns  #此为默认配置</div></pre></td></tr></table></figure>
<h3 id="resolv-conf-域名解析服务器配置"><a href="#resolv-conf-域名解析服务器配置" class="headerlink" title="resolv.conf 域名解析服务器配置"></a>resolv.conf 域名解析服务器配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/home/was$ more /etc/resolv.conf</div><div class="line"># Generated by NetworkManager</div><div class="line">nameserver 114.114.114.114</div><div class="line">nameserver 8.8.8.8</div></pre></td></tr></table></figure>
<h3 id="hosts本地映射地址"><a href="#hosts本地映射地址" class="headerlink" title="hosts本地映射地址"></a>hosts本地映射地址</h3><p>和Windows系统(C:\Windows\System32\drivers\etc\hosts)下的host的文件相类似，就是一个文本文件，里面存放一些IP和域名的对应关系<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/home/was$more /etc/hosts</div><div class="line">127.0.0.1   localhost</div><div class="line">#223.252.198.111 api.yixin.im</div></pre></td></tr></table></figure></p>
<h3 id="测试易信接口域名解析"><a href="#测试易信接口域名解析" class="headerlink" title="测试易信接口域名解析"></a>测试易信接口域名解析</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">/home/was$ dig @114.114.114.114 api.yixin.im</div><div class="line">; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.17.rc1.el6 &lt;&lt;&gt;&gt; @114.114.114.114 api.yixin.im</div><div class="line">; (1 server found)</div><div class="line">;; global options: +cmd</div><div class="line">;; Got answer:</div><div class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 18824</div><div class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0</div><div class="line"></div><div class="line">;; QUESTION SECTION:</div><div class="line">;api.yixin.im.                  IN      A</div><div class="line"></div><div class="line">;; ANSWER SECTION:</div><div class="line">api.yixin.im.           124     IN      A       223.252.199.8</div><div class="line"></div><div class="line">;; Query time: 6 msec</div><div class="line">;; SERVER: 114.114.114.114#53(114.114.114.114)</div><div class="line">;; WHEN: Tue Aug 30 16:52:07 2016</div><div class="line">;; MSG SIZE  rcvd: 46</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;解析域名3个关键文件：&quot;&gt;&lt;a href=&quot;#解析域名3个关键文件：&quot; class=&quot;headerlink&quot; title=&quot;解析域名3个关键文件：&quot;&gt;&lt;/a&gt;解析域名3个关键文件：&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/etc/hosts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/etc/resolv.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/etc/nsswitch.conf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="linux" scheme="http://renjiabao.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="http://renjiabao.cn/tags/linux/"/>
    
      <category term="dns" scheme="http://renjiabao.cn/tags/dns/"/>
    
  </entry>
  
  <entry>
    <title>Hexo入门</title>
    <link href="http://renjiabao.cn/2013/12/20/hexo%E5%85%A5%E9%97%A8/"/>
    <id>http://renjiabao.cn/2013/12/20/hexo入门/</id>
    <published>2013-12-19T16:00:00.000Z</published>
    <updated>2016-09-06T10:30:53.580Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://renjiabao.cn/categories/Hexo/"/>
    
    
  </entry>
  
</feed>
