<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Java语言实现的各种排序]]></title>
      <url>http://renjiabao.cn/2014/10/09/java_sort/</url>
      <content type="html"><![CDATA[<p> 用Java语言实现的各种排序，包括插入排序、冒泡排序、选择排序、Shell排序、快速排序、归并排序、堆排序、SortUtil等。</p>
<h4 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">package</span> org.rut.util.algorithm.support;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertSort</span> <span class="keyword">implements</span> <span class="title">SortUtil</span>.<span class="title">Sort</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] data)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> temp;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;data.length;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i;(j&gt;<span class="number">0</span>)&amp;&amp;(data[j]&lt;data[j-<span class="number">1</span>]);j--)&#123;</div><div class="line">                SortUtil.swap(data,j,j-<span class="number">1</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;        </div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class BubbleSort implements SortUtil.Sort&#123;</div><div class="line"></div><div class="line">    /* (non-Javadoc)</div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        int temp;</div><div class="line">        for(int i=0;i&lt;data.length;i++)&#123;</div><div class="line">            for(int j=data.length-1;j&gt;i;j--)&#123;</div><div class="line">                if(data[j]&lt;data[j-1])&#123;</div><div class="line">                    SortUtil.swap(data,j,j-1);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class SelectionSort implements SortUtil.Sort &#123;</div><div class="line"></div><div class="line">    /*</div><div class="line">     * (non-Javadoc)</div><div class="line">     * </div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        int temp;</div><div class="line">        for (int i = 0; i &lt; data.length; i++) &#123;</div><div class="line">            int lowIndex = i;</div><div class="line">            for (int j = data.length - 1; j &gt; i; j--) &#123;</div><div class="line">                if (data[j] &lt; data[lowIndex]) &#123;</div><div class="line">                    lowIndex = j;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            SortUtil.swap(data,i,lowIndex);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Shell排序"><a href="#Shell排序" class="headerlink" title="Shell排序"></a>Shell排序</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class ShellSort implements SortUtil.Sort&#123;</div><div class="line"></div><div class="line">    /* (non-Javadoc)</div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        for(int i=data.length/2;i&gt;2;i/=2)&#123;</div><div class="line">            for(int j=0;j&lt;i;j++)&#123;</div><div class="line">                insertSort(data,j,i);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        insertSort(data,0,1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * @param data</div><div class="line">     * @param j</div><div class="line">     * @param i</div><div class="line">     */</div><div class="line">    private void insertSort(int[] data, int start, int inc) &#123;</div><div class="line">        int temp;</div><div class="line">        for(int i=start+inc;i&lt;data.length;i+=inc)&#123;</div><div class="line">            for(int j=i;(j&gt;=inc)&amp;&amp;(data[j]&lt;data[j-inc]);j-=inc)&#123;</div><div class="line">                SortUtil.swap(data,j,j-inc);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class QuickSort implements SortUtil.Sort&#123;</div><div class="line"></div><div class="line">    /* (non-Javadoc)</div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        quickSort(data,0,data.length-1);        </div><div class="line">    &#125;</div><div class="line">    private void quickSort(int[] data,int i,int j)&#123;</div><div class="line">        int pivotIndex=(i+j)/2;</div><div class="line">        //swap</div><div class="line">        SortUtil.swap(data,pivotIndex,j);</div><div class="line">         </div><div class="line">        int k=partition(data,i-1,j,data[j]);</div><div class="line">        SortUtil.swap(data,k,j);</div><div class="line">        if((k-i)&gt;1) quickSort(data,i,k-1);</div><div class="line">        if((j-k)&gt;1) quickSort(data,k+1,j);</div><div class="line">         </div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     * @param data</div><div class="line">     * @param i</div><div class="line">     * @param j</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    private int partition(int[] data, int l, int r,int pivot) &#123;</div><div class="line">        do&#123;</div><div class="line">           while(data[++l]&lt;pivot);</div><div class="line">           while((r!=0)&amp;&amp;data[--r]&gt;pivot);</div><div class="line">           SortUtil.swap(data,l,r);</div><div class="line">        &#125;</div><div class="line">        while(l&lt;r);</div><div class="line">        SortUtil.swap(data,l,r);        </div><div class="line">        return l;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="改进后的快速排序"><a href="#改进后的快速排序" class="headerlink" title="改进后的快速排序"></a>改进后的快速排序</h5><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class ImprovedQuickSort implements SortUtil.Sort &#123;</div><div class="line"></div><div class="line">    private static int MAX_STACK_SIZE=4096;</div><div class="line">    private static int THRESHOLD=10;</div><div class="line">    /* (non-Javadoc)</div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        int[] stack=new int[MAX_STACK_SIZE];</div><div class="line">         </div><div class="line">        int top=-1;</div><div class="line">        int pivot;</div><div class="line">        int pivotIndex,l,r;</div><div class="line">        </div><div class="line">        stack[++top]=0;</div><div class="line">        stack[++top]=data.length-1;</div><div class="line">        </div><div class="line">        while(top&gt;0)&#123;</div><div class="line">            int j=stack[top--];</div><div class="line">            int i=stack[top--];</div><div class="line">            </div><div class="line">            pivotIndex=(i+j)/2;</div><div class="line">            pivot=data[pivotIndex];</div><div class="line">            </div><div class="line">            SortUtil.swap(data,pivotIndex,j);</div><div class="line">            </div><div class="line">            //partition</div><div class="line">            l=i-1;</div><div class="line">            r=j;</div><div class="line">            do&#123;</div><div class="line">                while(data[++l]&lt;pivot);</div><div class="line">                while((r!=0)&amp;&amp;(data[--r]&gt;pivot));</div><div class="line">                SortUtil.swap(data,l,r);</div><div class="line">            &#125;</div><div class="line">            while(l&lt;r);</div><div class="line">            SortUtil.swap(data,l,r);</div><div class="line">            SortUtil.swap(data,l,j);</div><div class="line">            </div><div class="line">            if((l-i)&gt;THRESHOLD)&#123;</div><div class="line">                stack[++top]=i;</div><div class="line">                stack[++top]=l-1;</div><div class="line">            &#125;</div><div class="line">            if((j-l)&gt;THRESHOLD)&#123;</div><div class="line">                stack[++top]=l+1;</div><div class="line">                stack[++top]=j;</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">        &#125;</div><div class="line">        //new InsertSort().sort(data);</div><div class="line">        insertSort(data);</div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     * @param data</div><div class="line">     */</div><div class="line">    private void insertSort(int[] data) &#123;</div><div class="line">        int temp;</div><div class="line">        for(int i=1;i&lt;data.length;i++)&#123;</div><div class="line">            for(int j=i;(j&gt;0)&amp;&amp;(data[j]&lt;data[j-1]);j--)&#123;</div><div class="line">                SortUtil.swap(data,j,j-1);</div><div class="line">            &#125;</div><div class="line">        &#125;       </div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class MergeSort implements SortUtil.Sort&#123;</div><div class="line"></div><div class="line">    /* (non-Javadoc)</div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        int[] temp=new int[data.length];</div><div class="line">        mergeSort(data,temp,0,data.length-1);</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    private void mergeSort(int[] data,int[] temp,int l,int r)&#123;</div><div class="line">        int mid=(l+r)/2;</div><div class="line">        if(l==r) return ;</div><div class="line">        mergeSort(data,temp,l,mid);</div><div class="line">        mergeSort(data,temp,mid+1,r);</div><div class="line">        for(int i=l;i&lt;=r;i++)&#123;</div><div class="line">            temp[i]=data[i];</div><div class="line">        &#125;</div><div class="line">        int i1=l;</div><div class="line">        int i2=mid+1;</div><div class="line">        for(int cur=l;cur&lt;=r;cur++)&#123;</div><div class="line">            if(i1==mid+1)</div><div class="line">                data[cur]=temp[i2++];</div><div class="line">            else if(i2&gt;r)</div><div class="line">                data[cur]=temp[i1++];</div><div class="line">            else if(temp[i1]&lt;temp[i2])</div><div class="line">                data[cur]=temp[i1++];</div><div class="line">            else</div><div class="line">                data[cur]=temp[i2++];            </div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="改进后的归并排序"><a href="#改进后的归并排序" class="headerlink" title="改进后的归并排序"></a>改进后的归并排序</h5><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class ImprovedMergeSort implements SortUtil.Sort &#123;</div><div class="line"></div><div class="line">    private static final int THRESHOLD = 10;</div><div class="line"></div><div class="line">    /*</div><div class="line">     * (non-Javadoc)</div><div class="line">     * </div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        int[] temp=new int[data.length];</div><div class="line">        mergeSort(data,temp,0,data.length-1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void mergeSort(int[] data, int[] temp, int l, int r) &#123;</div><div class="line">        int i, j, k;</div><div class="line">        int mid = (l + r) / 2;</div><div class="line">        if (l == r)</div><div class="line">            return;</div><div class="line">        if ((mid - l) &gt;= THRESHOLD)</div><div class="line">            mergeSort(data, temp, l, mid);</div><div class="line">        else</div><div class="line">            insertSort(data, l, mid - l + 1);</div><div class="line">        if ((r - mid) &gt; THRESHOLD)</div><div class="line">            mergeSort(data, temp, mid + 1, r);</div><div class="line">        else</div><div class="line">            insertSort(data, mid + 1, r - mid);</div><div class="line"></div><div class="line">        for (i = l; i &lt;= mid; i++) &#123;</div><div class="line">            temp[i] = data[i];</div><div class="line">        &#125;</div><div class="line">        for (j = 1; j &lt;= r - mid; j++) &#123;</div><div class="line">            temp[r - j + 1] = data[j + mid];</div><div class="line">        &#125;</div><div class="line">        int a = temp[l];</div><div class="line">        int b = temp[r];</div><div class="line">        for (i = l, j = r, k = l; k &lt;= r; k++) &#123;</div><div class="line">            if (a &lt; b) &#123;</div><div class="line">                data[k] = temp[i++];</div><div class="line">                a = temp[i];</div><div class="line">            &#125; else &#123;</div><div class="line">                data[k] = temp[j--];</div><div class="line">                b = temp[j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * @param data</div><div class="line">     * @param l</div><div class="line">     * @param i</div><div class="line">     */</div><div class="line">    private void insertSort(int[] data, int start, int len) &#123;</div><div class="line">        for(int i=start+1;i&lt;start+len;i++)&#123;</div><div class="line">            for(int j=i;(j&gt;start) &amp;&amp; data[j]&lt;data[j-1];j--)&#123;</div><div class="line">                SortUtil.swap(data,j,j-1);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">package org.rut.util.algorithm.support;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.SortUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class HeapSort implements SortUtil.Sort&#123;</div><div class="line"></div><div class="line">    /* (non-Javadoc)</div><div class="line">     * @see org.rut.util.algorithm.SortUtil.Sort#sort(int[])</div><div class="line">     */</div><div class="line">    public void sort(int[] data) &#123;</div><div class="line">        MaxHeap h=new MaxHeap();</div><div class="line">        h.init(data);</div><div class="line">        for(int i=0;i&lt;data.length;i++)</div><div class="line">            h.remove();</div><div class="line">        System.arraycopy(h.queue,1,data,0,data.length);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">     private static class MaxHeap&#123;         </div><div class="line">         </div><div class="line">        void init(int[] data)&#123;</div><div class="line">            this.queue=new int[data.length+1];</div><div class="line">            for(int i=0;i&lt;data.length;i++)&#123;</div><div class="line">                queue[++size]=data[i];</div><div class="line">                fixUp(size);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">         </div><div class="line">        private int size=0;</div><div class="line"></div><div class="line">        private int[] queue;</div><div class="line">                 </div><div class="line">        public int get() &#123;</div><div class="line">            return queue[1];</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        public void remove() &#123;</div><div class="line">            SortUtil.swap(queue,1,size--);</div><div class="line">            fixDown(1);</div><div class="line">        &#125;</div><div class="line">        //fixdown</div><div class="line">        private void fixDown(int k) &#123;</div><div class="line">            int j;</div><div class="line">            while ((j = k &lt;&lt; 1) &lt;= size) &#123;</div><div class="line">                if (j &lt; size &amp;&amp; queue[j]&lt;queue[j+1])</div><div class="line">                    j++; </div><div class="line">                if (queue[k]&gt;queue[j]) //不用交换</div><div class="line">                    break;</div><div class="line">                SortUtil.swap(queue,j,k);</div><div class="line">                k = j;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        private void fixUp(int k) &#123;</div><div class="line">            while (k &gt; 1) &#123;</div><div class="line">                int j = k &gt;&gt; 1;</div><div class="line">                if (queue[j]&gt;queue[k])</div><div class="line">                    break;</div><div class="line">                SortUtil.swap(queue,j,k);</div><div class="line">                k = j;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>SortUtil<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">package org.rut.util.algorithm;</div><div class="line"></div><div class="line">import org.rut.util.algorithm.support.BubbleSort;</div><div class="line">import org.rut.util.algorithm.support.HeapSort;</div><div class="line">import org.rut.util.algorithm.support.ImprovedMergeSort;</div><div class="line">import org.rut.util.algorithm.support.ImprovedQuickSort;</div><div class="line">import org.rut.util.algorithm.support.InsertSort;</div><div class="line">import org.rut.util.algorithm.support.MergeSort;</div><div class="line">import org.rut.util.algorithm.support.QuickSort;</div><div class="line">import org.rut.util.algorithm.support.SelectionSort;</div><div class="line">import org.rut.util.algorithm.support.ShellSort;</div><div class="line"></div><div class="line"></div><div class="line">public class SortUtil &#123;</div><div class="line">    public final static int INSERT = 1;</div><div class="line">    public final static int BUBBLE = 2;</div><div class="line">    public final static int SELECTION = 3;</div><div class="line">    public final static int SHELL = 4;</div><div class="line">    public final static int QUICK = 5;</div><div class="line">    public final static int IMPROVED_QUICK = 6;</div><div class="line">    public final static int MERGE = 7;</div><div class="line">    public final static int IMPROVED_MERGE = 8;</div><div class="line">    public final static int HEAP = 9;</div><div class="line"></div><div class="line">    public static void sort(int[] data) &#123;</div><div class="line">        sort(data, IMPROVED_QUICK);</div><div class="line">    &#125;</div><div class="line">    private static String[] name=&#123;</div><div class="line">            &quot;insert&quot;, &quot;bubble&quot;, &quot;selection&quot;, &quot;shell&quot;, &quot;quick&quot;, &quot;improved_quick&quot;, &quot;merge&quot;, &quot;improved_merge&quot;, &quot;heap&quot;</div><div class="line">    &#125;;</div><div class="line">     </div><div class="line">    private static Sort[] impl=new Sort[]&#123;</div><div class="line">            new InsertSort(),</div><div class="line">            new BubbleSort(),</div><div class="line">            new SelectionSort(),</div><div class="line">            new ShellSort(),</div><div class="line">            new QuickSort(),</div><div class="line">            new ImprovedQuickSort(),</div><div class="line">            new MergeSort(),</div><div class="line">            new ImprovedMergeSort(),</div><div class="line">            new HeapSort()</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    public static String toString(int algorithm)&#123;</div><div class="line">        return name[algorithm-1];</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    public static void sort(int[] data, int algorithm) &#123;</div><div class="line">        impl[algorithm-1].sort(data);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static interface Sort &#123;</div><div class="line">        public void sort(int[] data);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static void swap(int[] data, int i, int j) &#123;</div><div class="line">        int temp = data[i];</div><div class="line">        data[i] = data[j];</div><div class="line">        data[j] = temp;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux域名解析]]></title>
      <url>http://renjiabao.cn/2014/10/01/linux-dns/</url>
      <content type="html"><![CDATA[<h2 id="解析域名3个关键文件："><a href="#解析域名3个关键文件：" class="headerlink" title="解析域名3个关键文件："></a>解析域名3个关键文件：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">/etc/hosts</div><div class="line">/etc/resolv.conf</div><div class="line">/etc/nsswitch.conf</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="nsswitch-conf-与系统获取解析的顺序"><a href="#nsswitch-conf-与系统获取解析的顺序" class="headerlink" title="nsswitch.conf 与系统获取解析的顺序"></a>nsswitch.conf 与系统获取解析的顺序</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">/home/was$ vi /etc/nsswitch.conf</div><div class="line"> #找到hosts关键字</div><div class="line"> #hosts:     db files nisplus nis dns</div><div class="line"> hosts:      files dns  #此为默认配置</div></pre></td></tr></table></figure>
<h3 id="resolv-conf-域名解析服务器配置"><a href="#resolv-conf-域名解析服务器配置" class="headerlink" title="resolv.conf 域名解析服务器配置"></a>resolv.conf 域名解析服务器配置</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">/home/was$ more /etc/resolv.conf</div><div class="line"># Generated by NetworkManager</div><div class="line">nameserver 114.114.114.114</div><div class="line">nameserver 8.8.8.8</div></pre></td></tr></table></figure>
<h3 id="hosts本地映射地址"><a href="#hosts本地映射地址" class="headerlink" title="hosts本地映射地址"></a>hosts本地映射地址</h3><p>和Windows系统(C:\Windows\System32\drivers\etc\hosts)下的host的文件相类似，就是一个文本文件，里面存放一些IP和域名的对应关系<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">/home/was$more /etc/hosts</div><div class="line">127.0.0.1   localhost</div><div class="line">#223.252.198.111 api.yixin.im</div></pre></td></tr></table></figure></p>
<h3 id="测试易信接口域名解析"><a href="#测试易信接口域名解析" class="headerlink" title="测试易信接口域名解析"></a>测试易信接口域名解析</h3><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">/home/was$ dig @114.114.114.114 api.yixin.im</div><div class="line">; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.17.rc1.el6 &lt;&lt;&gt;&gt; @114.114.114.114 api.yixin.im</div><div class="line">; (1 server found)</div><div class="line">;; global options: +cmd</div><div class="line">;; Got answer:</div><div class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 18824</div><div class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0</div><div class="line"></div><div class="line">;; QUESTION SECTION:</div><div class="line">;api.yixin.im.                  IN      A</div><div class="line"></div><div class="line">;; ANSWER SECTION:</div><div class="line">api.yixin.im.           124     IN      A       223.252.199.8</div><div class="line"></div><div class="line">;; Query time: 6 msec</div><div class="line">;; SERVER: 114.114.114.114<span class="comment">#53(114.114.114.114)</span></div><div class="line">;; WHEN: Tue Aug 30 16:52:07 2016</div><div class="line">;; MSG SIZE  rcvd: 46</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo 功能完善]]></title>
      <url>http://renjiabao.cn/2013/12/25/hexo_next/</url>
      <content type="html"><![CDATA[<h3 id="给Hexo添加“上一篇”、“下一篇”导航"><a href="#给Hexo添加“上一篇”、“下一篇”导航" class="headerlink" title="给Hexo添加“上一篇”、“下一篇”导航"></a>给Hexo添加“上一篇”、“下一篇”导航</h3><p>我使用的是Hexo的默认主题light，该主题的文章页面没有提供“上一篇”和“下一篇”导航功能，而我又非常喜欢默认主题的清爽简洁，只能自己折腾了。<br>在Hexo官方文档中变量说明部分我们可以知道，在 Article (post, page, …) 中page.prev和page.next分别代表上一篇和下一篇文章，这两个变量都是一个page对象，所以通过page.prev.path和page.prev.title就可以获取到上一篇文章的相对路径和标题，然后通过修改/themes/light/layout/文件夹中的文件来实现我们的功能。<br>首先，在/themes/light/layout/_partial/post/文件夹中新建prev_next.ejs文件。<br><a id="more"></a><br>prev_next.ejs<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&lt;% if (page.prev || page.next)&#123; %&gt;</div><div class="line">&lt;div class=&quot;prev_next clearfix&quot;&gt;</div><div class="line">  &lt;% if (page.prev)&#123; %&gt;</div><div class="line">    &lt;a href=&quot;&lt;%- config.root %&gt;&lt;%- page.prev.path %&gt;&quot; class=&quot;alignleft prev&quot; title=&quot;&lt;%= page.prev.title %&gt;&quot;&gt;&lt;%= page.prev.title %&gt;&lt;/a&gt;</div><div class="line">  &lt;% &#125; %&gt;</div><div class="line">  &lt;% if (page.next)&#123; %&gt;</div><div class="line">    &lt;a href=&quot;&lt;%- config.root %&gt;&lt;%- page.next.path %&gt;&quot; class=&quot;alignright next&quot; title=&quot;&lt;%= page.next.title %&gt;&quot;&gt;&lt;%= page.next.title %&gt;&lt;/a&gt;</div><div class="line">  &lt;% &#125; %&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure></p>
<p>然后，修改/themes/light/layout/_partial/article.ejs文章模板，找到需要加入“上一篇”和“下一篇”导航功能的位置，加上&lt;%- partial(‘post/prev_next’) %&gt;，比如这样：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">      &lt;% &#125; else &#123; %&gt;</div><div class="line">        &lt;%- partial(&apos;post/category&apos;) %&gt;</div><div class="line">        &lt;%- partial(&apos;post/tag&apos;) %&gt;</div><div class="line">        &lt;%- partial(&apos;post/share&apos;) %&gt;</div><div class="line">        &lt;%- partial(&apos;post/prev_next&apos;) %&gt;</div><div class="line">      &lt;% &#125; %&gt;</div><div class="line">      &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;</div><div class="line">    &lt;/footer&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line">&lt;/article&gt;</div><div class="line"></div><div class="line">&lt;%- partial(&apos;comment&apos;) %&gt;</div></pre></td></tr></table></figure></p>
<p>最后，在/themes/light/source/css/_partial/article.styl文件末尾添加上相应的CSS。<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">.prev_next</div><div class="line">  margin 1em 0</div><div class="line">  clear both</div><div class="line">  overflow hidden</div><div class="line">  a</div><div class="line">    display block</div><div class="line">    float left</div><div class="line">    width 50%</div><div class="line">    background #dbdbdb</div><div class="line">    text-align center</div><div class="line">    padding 0.4em 0</div><div class="line">    color #1ba1e2</div><div class="line">    transition background .45s color .45s</div><div class="line">    &amp;:hover</div><div class="line">      color #fafafa</div><div class="line">      background #717171</div><div class="line">    &amp;.prev::before</div><div class="line">      content &quot;上一篇：&quot;</div><div class="line">      padding-right 0.5em</div><div class="line">    &amp;.next::before</div><div class="line">      content &quot;下一篇：&quot;</div><div class="line">      padding-right 0.5em</div></pre></td></tr></table></figure></p>
<h3 id="给博客和文章添加keywords"><a href="#给博客和文章添加keywords" class="headerlink" title="给博客和文章添加keywords"></a>给博客和文章添加keywords</h3><hr>
<p>默认情况下博客和文章是没有关键字的，可以安装如下方法修改。<br>首先，在博客配置文件/Hexo/_config.yml中添加keywords:字段，关键字以英文,分割，如下:<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># Site</div><div class="line">title: typeof this  #站点名</div><div class="line">subtitle:    # 副标题</div><div class="line">description: # 站点描述，搜索引擎</div><div class="line">author: typeof</div><div class="line">email: xxx@admin.com</div><div class="line">language: zh-CN</div><div class="line">keywords: Web,前端,JavaScript,html5,css3 # 博客关键字</div></pre></td></tr></table></figure></p>
<p>然后，修改模板文件，我用的是light模板，修改/themes/light/layout/_partial/head.ejs<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#删除下面这行</div><div class="line">&lt;% if (page.keywords)&#123; %&gt;&lt;meta name=&quot;keywords&quot; content=&quot;&lt;%= page.keywords %&gt;&quot;&gt;&lt;% &#125; %&gt;</div><div class="line">#增加以下内容</div><div class="line">&lt;% if (page.keywords)&#123; %&gt;</div><div class="line">&lt;meta name=&quot;keywords&quot; content=&quot;&lt;%= page.keywords %&gt;,&lt;%= config.keywords %&gt;&quot;&gt;</div><div class="line">&lt;% &#125; else if (config.keywords)&#123; %&gt;</div><div class="line">&lt;meta name=&quot;keywords&quot; content=&quot;&lt;%= config.keywords %&gt;&quot;&gt;</div><div class="line">&lt;%&#125; %&gt;</div></pre></td></tr></table></figure></p>
<p>简单说明一下：如果页面有关键字，则用页面的关键字加上配置文件里面的关键字，如果没有关键字，则用配置文件的关键字。<br>要给文章添加关键字，只需要在文章里面加入keywords:即可。也可以直接修改创建文章的模板/scaffolds/post.md，在最下面添加keywords:，如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">title: &#123;&#123; title &#125;&#125;</div><div class="line">date: &#123;&#123; date &#125;&#125;</div><div class="line">updated: &#123;&#123; date &#125;&#125;</div><div class="line">tags:</div><div class="line">categories:</div><div class="line">keywords:</div></pre></td></tr></table></figure></p>
<h3 id="添加自定义widget"><a href="#添加自定义widget" class="headerlink" title="添加自定义widget"></a>添加自定义widget</h3><hr>
<p>添加widget的方法很简单，首先在/themes/light/layout/_widget/文件夹中创建widget文件your_widget.ejs，然后在主题配置文件中加载你的widget，下面通过创建一个友情链的widget来看看具体操作。<br>友情链接包含连接名称和连接地址两个属性，看到有的教程中把友情连接直接静态地写在widget中，修改起来不方便，所以要借助主题配置文件_config.yml和Hexo提供的访问配置文件的对象theme。<br>首先，在/themes/flight/_config.yml文件中添加如下节。</p>
<h3 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">blogrolls: #友情链接</div><div class="line">  - Hexo: http://hexo.io</div><div class="line">  - Hexo Document: http://hexo.io/docs</div><div class="line">  - github: https://github.com/</div><div class="line">  - jQuery: http://jquery.com/</div></pre></td></tr></table></figure>
<p>然后，在/themes/light/layout/_widget/文件夹中创建友情连接widget文件blogroll.ejs，内容可以这样：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&lt;% if (theme.blogrolls &amp;&amp; theme.blogrolls.length &gt; 0) &#123; %&gt;</div><div class="line">&lt;div class=&quot;widget tag&quot;&gt;</div><div class="line">  &lt;h3 class=&quot;title&quot;&gt;&lt;%= __(&apos;blogroll&apos;) %&gt;&lt;/h3&gt;</div><div class="line">  &lt;ul class=&quot;entry&quot;&gt;</div><div class="line">  &lt;% theme.blogrolls.forEach(function(item)&#123; %&gt;</div><div class="line">    &lt;%</div><div class="line">      var description, linkURL</div><div class="line">      for (var tmp in item) &#123;</div><div class="line">        description = tmp;</div><div class="line">        linkURL = item[tmp];</div><div class="line">      &#125;</div><div class="line">    %&gt;</div><div class="line">    &lt;li&gt;&lt;a href=&quot;&lt;%- linkURL %&gt;&quot; target=&quot;_blank&quot;&gt;&lt;%= description %&gt;&lt;/a&gt;&lt;/li&gt;</div><div class="line">  &lt;% &#125;); %&gt;</div><div class="line">  &lt;/ul&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure></p>
<p>最后，修改主题配置文件/themes/flight/_config.yml，在widgets下增加blogroll。如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">widgets:</div><div class="line">  - category</div><div class="line">  - tag</div><div class="line">  - recent_posts</div><div class="line">  - blogroll</div></pre></td></tr></table></figure></p>
<p>友情连接widget就创建好了，hexo server，在本地<a href="http://localhost:4000/查看效果吧！同样，我们可以使用此方法添加个人说明，微博秀等widget。" target="_blank" rel="external">http://localhost:4000/查看效果吧！同样，我们可以使用此方法添加个人说明，微博秀等widget。</a><br>添加最新评论widget<br>首先需要声明的是本屌用的是多说评论系统，所以最新评论widget也是利用多说提供的API来实现，上一节已经分享了怎么创建自定义的widget，现在我们按照上面的方法来一步一步实现该widget。<br>在/themes/light/layout/_widget/文件夹下创建最新评论小挂件recent_comments.ejs，内容如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&lt;% if (theme.duoshuo)&#123; %&gt;</div><div class="line">&lt;div class=&quot;widget recent_comments&quot;&gt;</div><div class="line">  &lt;h3 class=&quot;title&quot;&gt;&lt;%= __(&apos;recent_comments&apos;) %&gt;&lt;/h3&gt;</div><div class="line">  &lt;ul class=&quot;entry ds-recent-comments&quot; data-num-items=&quot;5&quot; data-show-avatars=&quot;0&quot; data-show-title=&quot;1&quot; data-show-time=&quot;1&quot;&gt;&lt;/ul&gt;</div><div class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">  if(typeof duoshuoQuery === &apos;undefined&apos;)&#123;</div><div class="line">    var duoshuoQuery = &#123;short_name:&quot;&lt;%- theme.duoshuo %&gt;&quot;&#125;;</div><div class="line">    (function() &#123;</div><div class="line">      var ds = document.createElement(&apos;script&apos;);</div><div class="line">      ds.type = &apos;text/javascript&apos;;ds.async = true;</div><div class="line">      ds.src = &apos;http://static.duoshuo.com/embed.js&apos;;</div><div class="line">      ds.charset = &apos;UTF-8&apos;;</div><div class="line">      (document.getElementsByTagName(&apos;head&apos;)[0]</div><div class="line">      || document.getElementsByTagName(&apos;body&apos;)[0]).appendChild(ds);</div><div class="line">    &#125;)();</div><div class="line">  &#125;</div><div class="line">  &lt;/script&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure></p>
<p>简单说明，在每个页面中，如果使用多个多说控件，只需要添加一次多说js，所以这里有这样的判断if(typeof duoshuoQuery===’undefined’)，在需要用到多说的位置都加上这个判断，避免多次加载js文件；另外多说评论相关的参数：data-num-items显示的评论条数，data-show-avatars是否显示用户头像，data-show-title是否显示文章标题，data-show-time是否显示评论时间，具体参数说明可以参考多说官方说明文档，按照官方文档还可以添加多说最近访客小部件和热评文章小部件。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo入门]]></title>
      <url>http://renjiabao.cn/2013/12/20/hexo%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[关于]]></title>
      <url>http://renjiabao.cn/about/index.html</url>
      <content type="html"><![CDATA[<p>生命在于折腾!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[读书]]></title>
      <url>http://renjiabao.cn/reading/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[留言板]]></title>
      <url>http://renjiabao.cn/board/index.html</url>
      <content type="html"><![CDATA[<p>有任何问题请留言，很乐意与大家沟通交流！</p>
]]></content>
    </entry>
    
  
</search>
